/*
****** Initiate tables with no reference.
*/
CREATE TABLE EMPLOYEE(
	eid INT NOT NULL AUTO_INCREMENT,
    bdate DATE,
    name VARCHAR(100),
    gender VARCHAR(1),
    email VARCHAR(100),
    salary FLOAT,
    address VARCHAR(100),
    PRIMARY KEY (eid)
);

CREATE TABLE NURSE(
	eid INT NOT NULL,
    PRIMARY KEY (eid)
);

CREATE TABLE BUILDING(
	name VARCHAR(100) NOT NULL,
    location VARCHAR(100),
    PRIMARY KEY(name)
);

CREATE TABLE ROOM(
	nid INT,
	room_id INT NOT NULL AUTO_INCREMENT,
    bname VARCHAR(100) NOT NULL,
    room_type VARCHAR(20),
    PRIMARY KEY (room_id, bname)
);

CREATE TABLE ROOMTYPE(
	room_type VARCHAR(20) NOT NULL,
    capacity INT,
    PRIMARY KEY (room_type)
);

CREATE TABLE DOCTOR(
	eid INT NOT NULL,
    supervisor_id INT,
    fname VARCHAR(100),
    PRIMARY KEY (eid)
);

CREATE TABLE FACULTY(
	name VARCHAR(100) NOT NULL,
    manager_id INT,
    start_date DATE,
    end_date DATE,
    location_address VARCHAR(100),
    PRIMARY KEY(name)
);

CREATE TABLE TREATMENT (
	tid INT NOT NULL AUTO_INCREMENT,
    pid INT NOT NULL,
    did INT NOT NULL,
    description VARCHAR(1000),
    fee FLOAT,
    result VARCHAR(1000),
    disease VARCHAR(1000),
    discharged_date DATE,
    admitted_date DATE,
    PRIMARY KEY (tid, pid, did)
);

CREATE TABLE TREATMENT_INCLUDE (
	tid INT NOT NULL,
    pid INT NOT NULL,
    did INT NOT NULL,
    mcode INT NOT NULL,
    instruction VARCHAR(1000),
    quantity INT,
    PRIMARY KEY (tid, pid, did, mcode)
);

CREATE TABLE INPATIENT(
	pid INT NOT NULL,
    room_id INT,
    bname VARCHAR(100),
    PRIMARY KEY (pid)
);

CREATE TABLE PATIENT(
	pid INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(100),
    gender VARCHAR(1),
    bdate DATE,
    address VARCHAR(100),
    phone_number VARCHAR(20),
    anamnesis VARCHAR(1000),
    PRIMARY KEY (pid)
);

CREATE TABLE MEDICINE(
	code INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(200),
    price FLOAT,
    PRIMARY KEY (code)
);

CREATE TABLE EXAMINATION(
	exam_id INT NOT NULL AUTO_INCREMENT,
    pid INT NOT NULL,
    did INT NOT NULL,
    diagnosis VARCHAR(1000),
    date DATE,
    fee FLOAT,
    symptoms VARCHAR(1000),
    PRIMARY KEY (exam_id, pid, did)
);

CREATE TABLE EXAMINATION_INCLUDE(
	ex_id INT NOT NULL,
    pid INT NOT NULL,
    did INT NOT NULL,
    mcode INT NOT NULL,
    instruction VARCHAR(1000),
    quantity VARCHAR(1000),
    PRIMARY KEY (ex_id, pid, did, mcode)
);

CREATE TABLE OUTPATIENT(
	pid INT NOT NULL,
    PRIMARY KEY (pid)
);

CREATE TABLE APPOINTMENT(
	pid INT NOT NULL,
    did INT NOT NULL,
    date DATE NOT NULL,
    PRIMARY KEY (pid, did, date)
);

CREATE TABLE E_PHONE_NUMBERS (
	eid INT NOT NULL,
    phone_no VARCHAR(20) NOT NULL,
    PRIMARY KEY(eid, phone_no)
);

CREATE TABLE CARE(
	nid INT NOT NULL,
    pid INT NOT NULL,
    PRIMARY KEY(nid, pid)
);

/*
****** Referential and integrity constraints.
*/
ALTER TABLE ROOM
ADD  FOREIGN KEY (nid) REFERENCES NURSE(eid) ON DELETE SET NULL ON UPDATE CASCADE,
ADD  FOREIGN KEY (bname) REFERENCES BUILDING(name) ON DELETE CASCADE ON UPDATE CASCADE,
-- Normalization 3F for room_type.
ADD  FOREIGN KEY (room_type) REFERENCES ROOMTYPE(room_type) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE DOCTOR
ADD FOREIGN KEY (eid) REFERENCES EMPLOYEE(eid) ON DELETE CASCADE ON UPDATE CASCADE,
ADD FOREIGN KEY (fname) REFERENCES FACULTY(name) ON DELETE SET NULL ON UPDATE CASCADE,
ADD FOREIGN KEY (supervisor_id) REFERENCES DOCTOR(eid) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE NURSE
ADD FOREIGN KEY (eid) REFERENCES EMPLOYEE(eid) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE FACULTY
ADD  FOREIGN KEY (manager_id) REFERENCES DOCTOR(eid) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE TREATMENT
ADD FOREIGN KEY (pid) REFERENCES INPATIENT(pid) ON DELETE CASCADE ON UPDATE CASCADE,
ADD FOREIGN KEY (did) REFERENCES DOCTOR(eid) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE TREATMENT_INCLUDE
ADD FOREIGN KEY (tid, pid, did) REFERENCES TREATMENT (tid, pid, did) ON DELETE CASCADE ON UPDATE CASCADE,
ADD FOREIGN KEY (mcode) REFERENCES MEDICINE(code) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE INPATIENT
ADD FOREIGN KEY (room_id, bname) REFERENCES ROOM(room_id, bname) ON DELETE SET NULL ON UPDATE CASCADE,
ADD FOREIGN KEY (pid) REFERENCES PATIENT(pid) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE EXAMINATION
ADD FOREIGN KEY (pid) REFERENCES OUTPATIENT(pid) ON DELETE CASCADE ON UPDATE CASCADE,
ADD FOREIGN KEY (did) REFERENCES DOCTOR(eid) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE EXAMINATION_INCLUDE
ADD FOREIGN KEY (mcode) REFERENCES MEDICINE(code) ON DELETE CASCADE ON UPDATE CASCADE,
ADD FOREIGN KEY (ex_id, pid, did) REFERENCES EXAMINATION(exam_id, pid, did) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE OUTPATIENT
ADD FOREIGN KEY (pid) REFERENCES PATIENT(pid) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE APPOINTMENT
ADD FOREIGN KEY (pid) REFERENCES PATIENT(pid) ON DELETE CASCADE ON UPDATE CASCADE,
ADD FOREIGN KEY (did) REFERENCES DOCTOR(eid) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE E_PHONE_NUMBERS
ADD FOREIGN KEY (eid) REFERENCES EMPLOYEE(eid) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE CARE
ADD FOREIGN KEY (nid) REFERENCES NURSE(eid) ON DELETE CASCADE ON UPDATE CASCADE,
ADD FOREIGN KEY (pid) REFERENCES INPATIENT(pid) ON DELETE CASCADE ON UPDATE CASCADE;

/*
****** Create indice.
*/
-- Create index for EMPLOYEE.name.
CREATE INDEX employee_name ON EMPLOYEE(name);

-- Create index for PATIENT.name.
CREATE INDEX patient_name ON PATIENT(name);

-- Create index for MEDICINE.name.
CREATE INDEX medicine_name ON MEDICINE(name);

-- Create composite index for EXAMINATION.
CREATE INDEX examination_pid_did ON EXAMINATION(pid, did);
CREATE INDEX examination_did ON EXAMINATION(did);

-- Create composite index for TREATMENT.
CREATE INDEX treatment_pid_did ON TREATMENT(pid, did);
CREATE INDEX treatment_did ON TREATMENT(did);